1.
	a. 
	50
	  20
	    10
	      xx
	      15
	    40
	      30
		      25
	 	      38
	      xx
	  60
	    xx
	    70
	      66
	        xx
		      75
		    80
	b.
	inorder:
		10, 15, 20, 25, 30, 38, 40, 50, 60, 66, 70, 75, 80
	preorder:
		50, 20, 10, 15, 40, 30, 25, 38, 60, 70, 66, 80, 75
	postorder:
		15, 10, 25, 38, 30, 40, 20, 66, 75, 80, 70, 60, 50
	c.
        50
          15
            10
            40
              25
                38
                xx
              xx
          60
            xx
            70
              66
                xx
                75
              80
2.
	a.
	struct node
	{
		int value;
		node* left_child;
		node* right_child;
		node* parent:
	};
	b.
	void insert(node* head, int value){
		if(head == nullptr) return;
		if(value < head->value){
			if(head->left_child == nullptr){
				create new node temp with value(value) and parent(head) and children nullptrs
				head->left_child = temp;
				return;
			}
			return insert(head->left_child, value);
		else if(value > head.value){
			if(head->right_child == nullptr){
				create new node temp with value(value) and parent(head and children nullptrs
				head->right_child = temp;
				return;
			}
			return insert(head->right_child, value);
		return;
	}
3.
	a.
	07
	  05
	    03
	    01
	  06
	    04
	b.[7,5,6,3,1,4]
	c. [6,5,4,3,1]
4.
	a. O(C + S)
	b. O(log(C) + S)
	c. O(log(C) + log(S))
	d. O(log(S))
	e. O(1)
	f. O(log(C) + S)
	g. O(Slog(S))
	h. O(Clog(S))
		
